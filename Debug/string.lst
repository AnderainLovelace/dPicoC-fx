SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\dPicoc\cstdlib\string.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        string.c     1    /* string.h library for large systems - small embedded systems use clibrary.c instead */
        string.c     2    #include "../interpreter.h"
        string.c     3    
        string.c     4    #ifndef BUILTIN_MINI_STDLIB
        string.c     5    
        string.c     6    static int ZeroValue = 0;
        string.c     7    
        string.c     8    void StringStrcpy(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
P   00000000              _StringStrcpy:                   ; function: StringStrcpy
                                                           ; frame size=4
                                                           ; used runtime library name:
                                                           ; __slow_strcpy
    00000000 4F22                   STS.L       PR,@-R15
        string.c     9    {
        string.c    10        ReturnValue->Val->Pointer = strcpy(Param[0]->Val->Pointer, Param[1]->Val->Pointer);
    00000002 5351                   MOV.L       @(4,R5),R3
    00000004 5261                   MOV.L       @(4,R6),R2
    00000006 5221                   MOV.L       @(4,R2),R2
    00000008 6062                   MOV.L       @R6,R0
    0000000A 5001                   MOV.L       @(4,R0),R0
    0000000C 6122                   MOV.L       @R2,R1
    0000000E D2B2                   MOV.L       L619+2,R2  ; __slow_strcpy
    00000010 420B                   JSR         @R2
    00000012 6002                   MOV.L       @R0,R0
        string.c    11    }
    00000014 4F26                   LDS.L       @R15+,PR
    00000016 000B                   RTS
    00000018 2302                   MOV.L       R0,@R3
        string.c    12    
        string.c    13    void StringStrncpy(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs
                         +)
    0000001A              _StringStrncpy:                  ; function: StringStrncpy
                                                           ; frame size=16
        string.c    14    {
        string.c    15        ReturnValue->Val->Pointer = strncpy(Param[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Int
                         +eger);
    0000001A 6353                   MOV         R5,R3
    0000001C 2FE6                   MOV.L       R14,@-R15
    0000001E 6E63                   MOV         R6,R14
    00000020 2F86                   MOV.L       R8,@-R15
    00000022 4F22                   STS.L       PR,@-R15
    00000024 7FFC                   ADD         #-4,R15
    00000026 2F52                   MOV.L       R5,@R15
    00000028 5831                   MOV.L       @(4,R3),R8
    0000002A 56E2                   MOV.L       @(8,R14),R6
    0000002C 55E1                   MOV.L       @(4,R14),R5
    0000002E 5661                   MOV.L       @(4,R6),R6
    00000030 5551                   MOV.L       @(4,R5),R5
    00000032 6662                   MOV.L       @R6,R6
    00000034 6552                   MOV.L       @R5,R5
    00000036 64E2                   MOV.L       @R14,R4
    00000038 D3A8                   MOV.L       L619+6,R3  ; _strncpy
    0000003A 5441                   MOV.L       @(4,R4),R4
    0000003C 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000003E 6442                   MOV.L       @R4,R4
    00000040 2802                   MOV.L       R0,@R8
        string.c    16    }
    00000042 7F04                   ADD         #4,R15
    00000044 4F26                   LDS.L       @R15+,PR
    00000046 68F6                   MOV.L       @R15+,R8
    00000048 000B                   RTS
    0000004A 6EF6                   MOV.L       @R15+,R14
        string.c    17    
        string.c    18    void StringStrcmp(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    0000004C              _StringStrcmp:                   ; function: StringStrcmp
                                                           ; frame size=16
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    0000004C 2F86                   MOV.L       R8,@-R15
        string.c    19    {
        string.c    20        ReturnValue->Val->Integer = strcmp(Param[0]->Val->Pointer, Param[1]->Val->Pointer);
    0000004E 6163                   MOV         R6,R1
    00000050 4F22                   STS.L       PR,@-R15
    00000052 6463                   MOV         R6,R4
    00000054 7FF8                   ADD         #-8,R15
    00000056 1F51                   MOV.L       R5,@(4,R15)
    00000058 2F62                   MOV.L       R6,@R15
    0000005A 53F1                   MOV.L       @(4,R15),R3
    0000005C 5511                   MOV.L       @(4,R1),R5
    0000005E 5831                   MOV.L       @(4,R3),R8
    00000060 5551                   MOV.L       @(4,R5),R5
    00000062 6552                   MOV.L       @R5,R5
    00000064 6442                   MOV.L       @R4,R4
    00000066 5441                   MOV.L       @(4,R4),R4
    00000068 D39D                   MOV.L       L619+10,R3 ; __slow_strcmp1
    0000006A 430B                   JSR         @R3
    0000006C 6442                   MOV.L       @R4,R4
    0000006E 2802                   MOV.L       R0,@R8
        string.c    21    }
    00000070 7F08                   ADD         #8,R15
    00000072 4F26                   LDS.L       @R15+,PR
    00000074 000B                   RTS
    00000076 68F6                   MOV.L       @R15+,R8
        string.c    22    
        string.c    23    void StringStrncmp(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs
                         +)
    00000078              _StringStrncmp:                  ; function: StringStrncmp
                                                           ; frame size=16
    00000078 2FE6                   MOV.L       R14,@-R15
        string.c    24    {
        string.c    25        ReturnValue->Val->Integer = strncmp(Param[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Int
                         +eger);
    0000007A 6353                   MOV         R5,R3
    0000007C 2F86                   MOV.L       R8,@-R15
    0000007E 6E63                   MOV         R6,R14
    00000080 4F22                   STS.L       PR,@-R15
    00000082 7FFC                   ADD         #-4,R15
    00000084 2F52                   MOV.L       R5,@R15
    00000086 5831                   MOV.L       @(4,R3),R8
    00000088 56E2                   MOV.L       @(8,R14),R6
    0000008A 5661                   MOV.L       @(4,R6),R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000008C 55E1                   MOV.L       @(4,R14),R5
    0000008E 6662                   MOV.L       @R6,R6
    00000090 5551                   MOV.L       @(4,R5),R5
    00000092 6552                   MOV.L       @R5,R5
    00000094 64E2                   MOV.L       @R14,R4
    00000096 5441                   MOV.L       @(4,R4),R4
    00000098 D392                   MOV.L       L619+14,R3 ; _strncmp
    0000009A 430B                   JSR         @R3
    0000009C 6442                   MOV.L       @R4,R4
    0000009E 2802                   MOV.L       R0,@R8
        string.c    26    }
    000000A0 7F04                   ADD         #4,R15
    000000A2 4F26                   LDS.L       @R15+,PR
    000000A4 68F6                   MOV.L       @R15+,R8
    000000A6 000B                   RTS
    000000A8 6EF6                   MOV.L       @R15+,R14
        string.c    27    
        string.c    28    void StringStrcat(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    000000AA              _StringStrcat:                   ; function: StringStrcat
                                                           ; frame size=16
        string.c    29    {
        string.c    30        ReturnValue->Val->Pointer = strcat(Param[0]->Val->Pointer, Param[1]->Val->Pointer);
    000000AA 6163                   MOV         R6,R1
    000000AC 2F86                   MOV.L       R8,@-R15
    000000AE 6463                   MOV         R6,R4
    000000B0 4F22                   STS.L       PR,@-R15
    000000B2 7FF8                   ADD         #-8,R15
    000000B4 1F51                   MOV.L       R5,@(4,R15)
    000000B6 2F62                   MOV.L       R6,@R15
    000000B8 53F1                   MOV.L       @(4,R15),R3
    000000BA 5831                   MOV.L       @(4,R3),R8
    000000BC 5511                   MOV.L       @(4,R1),R5
    000000BE 5551                   MOV.L       @(4,R5),R5
    000000C0 6442                   MOV.L       @R4,R4
    000000C2 6552                   MOV.L       @R5,R5
    000000C4 5441                   MOV.L       @(4,R4),R4
    000000C6 D388                   MOV.L       L619+18,R3 ; _strcat
    000000C8 430B                   JSR         @R3
    000000CA 6442                   MOV.L       @R4,R4
    000000CC 2802                   MOV.L       R0,@R8
        string.c    31    }
    000000CE 7F08                   ADD         #8,R15
    000000D0 4F26                   LDS.L       @R15+,PR
    000000D2 000B                   RTS
    000000D4 68F6                   MOV.L       @R15+,R8
        string.c    32    
        string.c    33    void StringStrncat(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs
                         +)
    000000D6              _StringStrncat:                  ; function: StringStrncat
                                                           ; frame size=16
        string.c    34    {
        string.c    35        ReturnValue->Val->Pointer = strncat(Param[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Int
                         +eger);
    000000D6 6353                   MOV         R5,R3
    000000D8 2FE6                   MOV.L       R14,@-R15
    000000DA 6E63                   MOV         R6,R14
    000000DC 2F86                   MOV.L       R8,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000DE 4F22                   STS.L       PR,@-R15
    000000E0 7FFC                   ADD         #-4,R15
    000000E2 2F52                   MOV.L       R5,@R15
    000000E4 5831                   MOV.L       @(4,R3),R8
    000000E6 56E2                   MOV.L       @(8,R14),R6
    000000E8 55E1                   MOV.L       @(4,R14),R5
    000000EA 5661                   MOV.L       @(4,R6),R6
    000000EC 5551                   MOV.L       @(4,R5),R5
    000000EE 6662                   MOV.L       @R6,R6
    000000F0 6552                   MOV.L       @R5,R5
    000000F2 64E2                   MOV.L       @R14,R4
    000000F4 D37D                   MOV.L       L619+22,R3 ; _strncat
    000000F6 5441                   MOV.L       @(4,R4),R4
    000000F8 430B                   JSR         @R3
    000000FA 6442                   MOV.L       @R4,R4
    000000FC 2802                   MOV.L       R0,@R8
        string.c    36    }
    000000FE 7F04                   ADD         #4,R15
    00000100 4F26                   LDS.L       @R15+,PR
    00000102 68F6                   MOV.L       @R15+,R8
    00000104 000B                   RTS
    00000106 6EF6                   MOV.L       @R15+,R14
        string.c    37    
        string.c    38    void StringStrlen(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    00000108              _StringStrlen:                   ; function: StringStrlen
                                                           ; frame size=16
    00000108 2F86                   MOV.L       R8,@-R15
        string.c    39    {
        string.c    40        ReturnValue->Val->Integer = strlen(Param[0]->Val->Pointer);
    0000010A 6463                   MOV         R6,R4
    0000010C 4F22                   STS.L       PR,@-R15
    0000010E 7FF8                   ADD         #-8,R15
    00000110 1F51                   MOV.L       R5,@(4,R15)
    00000112 2F62                   MOV.L       R6,@R15
    00000114 53F1                   MOV.L       @(4,R15),R3
    00000116 5831                   MOV.L       @(4,R3),R8
    00000118 6442                   MOV.L       @R4,R4
    0000011A 5441                   MOV.L       @(4,R4),R4
    0000011C D374                   MOV.L       L619+26,R3 ; _strlen
    0000011E 430B                   JSR         @R3
    00000120 6442                   MOV.L       @R4,R4
    00000122 2802                   MOV.L       R0,@R8
        string.c    41    }
    00000124 7F08                   ADD         #8,R15
    00000126 4F26                   LDS.L       @R15+,PR
    00000128 000B                   RTS
    0000012A 68F6                   MOV.L       @R15+,R8
        string.c    42    
        string.c    43    void StringMemset(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    0000012C              _StringMemset:                   ; function: StringMemset
                                                           ; frame size=16
    0000012C 2FE6                   MOV.L       R14,@-R15
        string.c    44    {
        string.c    45        ReturnValue->Val->Pointer = memset(Param[0]->Val->Pointer, Param[1]->Val->Integer, Param[2]->Val->Inte
                         +ger);
    0000012E 6353                   MOV         R5,R3
    00000130 2F86                   MOV.L       R8,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000132 6E63                   MOV         R6,R14
    00000134 4F22                   STS.L       PR,@-R15
    00000136 7FFC                   ADD         #-4,R15
    00000138 2F52                   MOV.L       R5,@R15
    0000013A 5831                   MOV.L       @(4,R3),R8
    0000013C 56E2                   MOV.L       @(8,R14),R6
    0000013E 5661                   MOV.L       @(4,R6),R6
    00000140 55E1                   MOV.L       @(4,R14),R5
    00000142 6662                   MOV.L       @R6,R6
    00000144 5551                   MOV.L       @(4,R5),R5
    00000146 6552                   MOV.L       @R5,R5
    00000148 64E2                   MOV.L       @R14,R4
    0000014A 5441                   MOV.L       @(4,R4),R4
    0000014C D369                   MOV.L       L619+30,R3 ; _memset
    0000014E 430B                   JSR         @R3
    00000150 6442                   MOV.L       @R4,R4
    00000152 2802                   MOV.L       R0,@R8
        string.c    46    }
    00000154 7F04                   ADD         #4,R15
    00000156 4F26                   LDS.L       @R15+,PR
    00000158 68F6                   MOV.L       @R15+,R8
    0000015A 000B                   RTS
    0000015C 6EF6                   MOV.L       @R15+,R14
        string.c    47    
        string.c    48    void StringMemcpy(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    0000015E              _StringMemcpy:                   ; function: StringMemcpy
                                                           ; frame size=16
        string.c    49    {
        string.c    50        ReturnValue->Val->Pointer = memcpy(Param[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Inte
                         +ger);
    0000015E 6353                   MOV         R5,R3
    00000160 2FE6                   MOV.L       R14,@-R15
    00000162 6E63                   MOV         R6,R14
    00000164 2F86                   MOV.L       R8,@-R15
    00000166 4F22                   STS.L       PR,@-R15
    00000168 7FFC                   ADD         #-4,R15
    0000016A 2F52                   MOV.L       R5,@R15
    0000016C 5831                   MOV.L       @(4,R3),R8
    0000016E 56E2                   MOV.L       @(8,R14),R6
    00000170 55E1                   MOV.L       @(4,R14),R5
    00000172 5661                   MOV.L       @(4,R6),R6
    00000174 5551                   MOV.L       @(4,R5),R5
    00000176 6662                   MOV.L       @R6,R6
    00000178 6552                   MOV.L       @R5,R5
    0000017A 64E2                   MOV.L       @R14,R4
    0000017C D35E                   MOV.L       L619+34,R3 ; _memcpy
    0000017E 5441                   MOV.L       @(4,R4),R4
    00000180 430B                   JSR         @R3
    00000182 6442                   MOV.L       @R4,R4
    00000184 2802                   MOV.L       R0,@R8
        string.c    51    }
    00000186 7F04                   ADD         #4,R15
    00000188 4F26                   LDS.L       @R15+,PR
    0000018A 68F6                   MOV.L       @R15+,R8
    0000018C 000B                   RTS
    0000018E 6EF6                   MOV.L       @R15+,R14
        string.c    52    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        string.c    53    void StringMemcmp(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    00000190              _StringMemcmp:                   ; function: StringMemcmp
                                                           ; frame size=16
    00000190 2FE6                   MOV.L       R14,@-R15
        string.c    54    {
        string.c    55        ReturnValue->Val->Integer = memcmp(Param[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Inte
                         +ger);
    00000192 6353                   MOV         R5,R3
    00000194 2F86                   MOV.L       R8,@-R15
    00000196 6E63                   MOV         R6,R14
    00000198 4F22                   STS.L       PR,@-R15
    0000019A 7FFC                   ADD         #-4,R15
    0000019C 2F52                   MOV.L       R5,@R15
    0000019E 5831                   MOV.L       @(4,R3),R8
    000001A0 56E2                   MOV.L       @(8,R14),R6
    000001A2 5661                   MOV.L       @(4,R6),R6
    000001A4 55E1                   MOV.L       @(4,R14),R5
    000001A6 6662                   MOV.L       @R6,R6
    000001A8 5551                   MOV.L       @(4,R5),R5
    000001AA 6552                   MOV.L       @R5,R5
    000001AC 64E2                   MOV.L       @R14,R4
    000001AE 5441                   MOV.L       @(4,R4),R4
    000001B0 D352                   MOV.L       L619+38,R3 ; _memcmp
    000001B2 430B                   JSR         @R3
    000001B4 6442                   MOV.L       @R4,R4
    000001B6 2802                   MOV.L       R0,@R8
        string.c    56    }
    000001B8 7F04                   ADD         #4,R15
    000001BA 4F26                   LDS.L       @R15+,PR
    000001BC 68F6                   MOV.L       @R15+,R8
    000001BE 000B                   RTS
    000001C0 6EF6                   MOV.L       @R15+,R14
        string.c    57    
        string.c    58    void StringMemmove(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs
                         +)
    000001C2              _StringMemmove:                  ; function: StringMemmove
                                                           ; frame size=16
        string.c    59    {
        string.c    60        ReturnValue->Val->Pointer = memmove(Param[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Int
                         +eger);
    000001C2 6353                   MOV         R5,R3
    000001C4 2FE6                   MOV.L       R14,@-R15
    000001C6 6E63                   MOV         R6,R14
    000001C8 2F86                   MOV.L       R8,@-R15
    000001CA 4F22                   STS.L       PR,@-R15
    000001CC 7FFC                   ADD         #-4,R15
    000001CE 2F52                   MOV.L       R5,@R15
    000001D0 5831                   MOV.L       @(4,R3),R8
    000001D2 56E2                   MOV.L       @(8,R14),R6
    000001D4 55E1                   MOV.L       @(4,R14),R5
    000001D6 5661                   MOV.L       @(4,R6),R6
    000001D8 5551                   MOV.L       @(4,R5),R5
    000001DA 6662                   MOV.L       @R6,R6
    000001DC 6552                   MOV.L       @R5,R5
    000001DE 64E2                   MOV.L       @R14,R4
    000001E0 D347                   MOV.L       L619+42,R3 ; _memmove
    000001E2 5441                   MOV.L       @(4,R4),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001E4 430B                   JSR         @R3
    000001E6 6442                   MOV.L       @R4,R4
    000001E8 2802                   MOV.L       R0,@R8
        string.c    61    }
    000001EA 7F04                   ADD         #4,R15
    000001EC 4F26                   LDS.L       @R15+,PR
    000001EE 68F6                   MOV.L       @R15+,R8
    000001F0 000B                   RTS
    000001F2 6EF6                   MOV.L       @R15+,R14
        string.c    62    
        string.c    63    void StringMemchr(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    000001F4              _StringMemchr:                   ; function: StringMemchr
                                                           ; frame size=16
    000001F4 2FE6                   MOV.L       R14,@-R15
        string.c    64    {
        string.c    65        ReturnValue->Val->Pointer = memchr(Param[0]->Val->Pointer, Param[1]->Val->Integer, Param[2]->Val->Inte
                         +ger);
    000001F6 6353                   MOV         R5,R3
    000001F8 2F86                   MOV.L       R8,@-R15
    000001FA 6E63                   MOV         R6,R14
    000001FC 4F22                   STS.L       PR,@-R15
    000001FE 7FFC                   ADD         #-4,R15
    00000200 2F52                   MOV.L       R5,@R15
    00000202 5831                   MOV.L       @(4,R3),R8
    00000204 56E2                   MOV.L       @(8,R14),R6
    00000206 5661                   MOV.L       @(4,R6),R6
    00000208 55E1                   MOV.L       @(4,R14),R5
    0000020A 6662                   MOV.L       @R6,R6
    0000020C 5551                   MOV.L       @(4,R5),R5
    0000020E 6552                   MOV.L       @R5,R5
    00000210 64E2                   MOV.L       @R14,R4
    00000212 5441                   MOV.L       @(4,R4),R4
    00000214 D33B                   MOV.L       L619+46,R3 ; _memchr
    00000216 430B                   JSR         @R3
    00000218 6442                   MOV.L       @R4,R4
    0000021A 2802                   MOV.L       R0,@R8
        string.c    66    }
    0000021C 7F04                   ADD         #4,R15
    0000021E 4F26                   LDS.L       @R15+,PR
    00000220 68F6                   MOV.L       @R15+,R8
    00000222 000B                   RTS
    00000224 6EF6                   MOV.L       @R15+,R14
        string.c    67    
        string.c    68    void StringStrchr(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    00000226              _StringStrchr:                   ; function: StringStrchr
                                                           ; frame size=16
        string.c    69    {
        string.c    70        ReturnValue->Val->Pointer = strchr(Param[0]->Val->Pointer, Param[1]->Val->Integer);
    00000226 6163                   MOV         R6,R1
    00000228 2F86                   MOV.L       R8,@-R15
    0000022A 6463                   MOV         R6,R4
    0000022C 4F22                   STS.L       PR,@-R15
    0000022E 7FF8                   ADD         #-8,R15
    00000230 1F51                   MOV.L       R5,@(4,R15)
    00000232 2F62                   MOV.L       R6,@R15
    00000234 53F1                   MOV.L       @(4,R15),R3
    00000236 5831                   MOV.L       @(4,R3),R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000238 5511                   MOV.L       @(4,R1),R5
    0000023A 5551                   MOV.L       @(4,R5),R5
    0000023C 6442                   MOV.L       @R4,R4
    0000023E 6552                   MOV.L       @R5,R5
    00000240 5441                   MOV.L       @(4,R4),R4
    00000242 D331                   MOV.L       L619+50,R3 ; _strchr
    00000244 430B                   JSR         @R3
    00000246 6442                   MOV.L       @R4,R4
    00000248 2802                   MOV.L       R0,@R8
        string.c    71    }
    0000024A 7F08                   ADD         #8,R15
    0000024C 4F26                   LDS.L       @R15+,PR
    0000024E 000B                   RTS
    00000250 68F6                   MOV.L       @R15+,R8
        string.c    72    
        string.c    73    void StringStrrchr(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs
                         +)
    00000252              _StringStrrchr:                  ; function: StringStrrchr
                                                           ; frame size=16
        string.c    74    {
        string.c    75        ReturnValue->Val->Pointer = strrchr(Param[0]->Val->Pointer, Param[1]->Val->Integer);
    00000252 6163                   MOV         R6,R1
    00000254 2F86                   MOV.L       R8,@-R15
    00000256 6463                   MOV         R6,R4
    00000258 4F22                   STS.L       PR,@-R15
    0000025A 7FF8                   ADD         #-8,R15
    0000025C 1F51                   MOV.L       R5,@(4,R15)
    0000025E 2F62                   MOV.L       R6,@R15
    00000260 53F1                   MOV.L       @(4,R15),R3
    00000262 5831                   MOV.L       @(4,R3),R8
    00000264 5511                   MOV.L       @(4,R1),R5
    00000266 5551                   MOV.L       @(4,R5),R5
    00000268 6442                   MOV.L       @R4,R4
    0000026A 6552                   MOV.L       @R5,R5
    0000026C 5441                   MOV.L       @(4,R4),R4
    0000026E D327                   MOV.L       L619+54,R3 ; _strrchr
    00000270 430B                   JSR         @R3
    00000272 6442                   MOV.L       @R4,R4
    00000274 2802                   MOV.L       R0,@R8
        string.c    76    }
    00000276 7F08                   ADD         #8,R15
    00000278 4F26                   LDS.L       @R15+,PR
    0000027A 000B                   RTS
    0000027C 68F6                   MOV.L       @R15+,R8
        string.c    77    
        string.c    78    void StringStrstr(struct ParseState *Parser, struct Value *ReturnValue, struct Value **Param, int NumArgs)
    0000027E              _StringStrstr:                   ; function: StringStrstr
                                                           ; frame size=16
        string.c    79    {
        string.c    80        ReturnValue->Val->Pointer = strstr(Param[0]->Val->Pointer, Param[1]->Val->Pointer);
    0000027E 6163                   MOV         R6,R1
    00000280 2F86                   MOV.L       R8,@-R15
    00000282 6463                   MOV         R6,R4
    00000284 4F22                   STS.L       PR,@-R15
    00000286 7FF8                   ADD         #-8,R15
    00000288 1F51                   MOV.L       R5,@(4,R15)
    0000028A 2F62                   MOV.L       R6,@R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000028C 53F1                   MOV.L       @(4,R15),R3
    0000028E 5831                   MOV.L       @(4,R3),R8
    00000290 5511                   MOV.L       @(4,R1),R5
    00000292 5551                   MOV.L       @(4,R5),R5
    00000294 6442                   MOV.L       @R4,R4
    00000296 6552                   MOV.L       @R5,R5
    00000298 5441                   MOV.L       @(4,R4),R4
    0000029A D31D                   MOV.L       L619+58,R3 ; _strstr
    0000029C 430B                   JSR         @R3
    0000029E 6442                   MOV.L       @R4,R4
    000002A0 2802                   MOV.L       R0,@R8
        string.c    81    }
    000002A2 7F08                   ADD         #8,R15
    000002A4 4F26                   LDS.L       @R15+,PR
    000002A6 000B                   RTS
    000002A8 68F6                   MOV.L       @R15+,R8
        string.c    82    
        string.c    83    /* all string.h functions */
        string.c    84    struct LibraryFunction StringFunctions[] =
        string.c    85    {
        string.c    86        { StringMemcpy,        "void *memcpy(void *,void *,int);" },
        string.c    87        { StringMemmove,       "void *memmove(void *,void *,int);" },
        string.c    88        { StringMemchr,        "void *memchr(char *,int,int);" },
        string.c    89        { StringMemcmp,        "int memcmp(void *,void *,int);" },
        string.c    90        { StringMemset,        "void *memset(void *,int,int);" },
        string.c    91        { StringStrcat,        "char *strcat(char *,char *);" },
        string.c    92        { StringStrncat,       "char *strncat(char *,char *,int);" },
        string.c    93        { StringStrchr,        "char *strchr(char *,int);" },
        string.c    94        { StringStrrchr,       "char *strrchr(char *,int);" },
        string.c    95        { StringStrcmp,        "int strcmp(char *,char *);" },
        string.c    96        { StringStrncmp,       "int strncmp(char *,char *,int);" },
        string.c    97        { StringStrcpy,        "char *strcpy(char *,char *);" },
        string.c    98        { StringStrncpy,       "char *strncpy(char *,char *,int);" },
        string.c    99        { StringStrlen,        "int strlen(char *);" },
        string.c   100        { StringStrstr,        "char *strstr(char *,char *);" },
        string.c   101        { NULL,             NULL }
        string.c   102    };
        string.c   103    
        string.c   104    /* creates various system-dependent definitions */
        string.c   105    void StringSetupFunc(void)
    000002AA              _StringSetupFunc:                ; function: StringSetupFunc
                                                           ; frame size=8
    000002AA 4F22                   STS.L       PR,@-R15
        string.c   106    {
        string.c   107        /* define NULL */
        string.c   108        if (!VariableDefined(TableStrRegister("NULL")))
    000002AC D419                   MOV.L       L619+62,R4 ; L600
    000002AE D31A                   MOV.L       L619+66,R3 ; _TableStrRegister
    000002B0 430B                   JSR         @R3
    000002B2 0009                   NOP
    000002B4 D219                   MOV.L       L619+70,R2 ; _VariableDefined
    000002B6 420B                   JSR         @R2
    000002B8 6403                   MOV         R0,R4
    000002BA 2008                   TST         R0,R0
    000002BC 8B08                   BF          L618
        string.c   109            VariableDefinePlatformVar(NULL, "NULL", &IntType, (union AnyValue *)&ZeroValue, FALSE);
    000002BE E200                   MOV         #0,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002C0 D717                   MOV.L       L619+74,R7 ; __$ZeroValue
    000002C2 2F26                   MOV.L       R2,@-R15
    000002C4 D617                   MOV.L       L619+78,R6 ; _IntType
    000002C6 D513                   MOV.L       L619+62,R5 ; L600
    000002C8 D317                   MOV.L       L619+82,R3 ; _VariableDefinePlatformVar
    000002CA 430B                   JSR         @R3
    000002CC 6423                   MOV         R2,R4
    000002CE 7F04                   ADD         #4,R15
    000002D0              L618:                             
        string.c   110    }
    000002D0 4F26                   LDS.L       @R15+,PR
    000002D2 000B                   RTS
    000002D4 0009                   NOP
    000002D6              L619:                             
    000002D6 0000                   .DATA.W     0
    000002D8 <00000000>             .DATA.L     __slow_strcpy
    000002DC <00000000>             .DATA.L     _strncpy
    000002E0 <00000000>             .DATA.L     __slow_strcmp1
    000002E4 <00000000>             .DATA.L     _strncmp
    000002E8 <00000000>             .DATA.L     _strcat
    000002EC <00000000>             .DATA.L     _strncat
    000002F0 <00000000>             .DATA.L     _strlen
    000002F4 <00000000>             .DATA.L     _memset
    000002F8 <00000000>             .DATA.L     _memcpy
    000002FC <00000000>             .DATA.L     _memcmp
    00000300 <00000000>             .DATA.L     _memmove
    00000304 <00000000>             .DATA.L     _memchr
    00000308 <00000000>             .DATA.L     _strchr
    0000030C <00000000>             .DATA.L     _strrchr
    00000310 <00000000>             .DATA.L     _strstr
    00000314 <00000000>             .DATA.L     L600
    00000318 <00000000>             .DATA.L     _TableStrRegister
    0000031C <00000000>             .DATA.L     _VariableDefined
    00000320 <00000000>             .DATA.L     __$ZeroValue
    00000324 <00000000>             .DATA.L     _IntType
    00000328 <00000000>             .DATA.L     _VariableDefinePlatformVar
        string.c   111    
        string.c   112    #endif /* !BUILTIN_MINI_STDLIB */
D   00000000              __$ZeroValue:                    ; static: ZeroValue
    00000000 00000000               .DATA.L     H'00000000
    00000004              _StringFunctions:                ; static: StringFunctions
    00000004 <00000000>             .DATA.L     _StringMemcpy,L584,_StringMemmove,L585,_StringMemchr,L586,_StringMemcmp,L587,
             <00000000> +                       _StringMemset,L588,_StringStrcat,L589,_StringStrncat,L590,_StringStrchr,L591,
             <00000000> +                       _StringStrrchr,L592,_StringStrcmp,L593,_StringStrncmp,L594,_StringStrcpy,L595,
             <00000000> +                       _StringStrncpy,L596,_StringStrlen,L597,_StringStrstr,L598
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    0000007C 0000000000             .DATA.L     H'00000000,H'00000000
             000000       
C   00000000              L600:
    00000000 4E554C4C               .SDATA      "NULL"
    00000004 00                     .DATA.B     H'00
    00000005 00000001               .RES.B      1
    00000006 00000002               .RES.W      1
    00000008              L584:
    00000008 766F696420             .SDATA      "void *memcpy(void *,void *,int);"
             2A6D656D63   
             707928766F   
             6964202A2C   
             766F696420   
             2A2C696E74   
             293B         
    00000028 00                     .DATA.B     H'00
    00000029 00000001               .RES.B      1
    0000002A 00000002               .RES.W      1
    0000002C              L585:
    0000002C 766F696420             .SDATA      "void *memmove(void *,void *,int);"
             2A6D656D6D   
             6F76652876   
             6F6964202A   
             2C766F6964   
             202A2C696E   
             74293B       
    0000004D 00                     .DATA.B     H'00
    0000004E 00000002               .RES.W      1
    00000050              L586:
    00000050 766F696420             .SDATA      "void *memchr(char *,int,int);"
             2A6D656D63   
             6872286368   
             6172202A2C   
             696E742C69   
             6E74293B     
    0000006D 00                     .DATA.B     H'00
    0000006E 00000002               .RES.W      1
    00000070              L587:
    00000070 696E74206D             .SDATA      "int memcmp(void *,void *,int);"
             656D636D70   
             28766F6964   
             202A2C766F   
             6964202A2C   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             696E74293B   
    0000008E 00                     .DATA.B     H'00
    0000008F 00000001               .RES.B      1
    00000090              L588:
    00000090 766F696420             .SDATA      "void *memset(void *,int,int);"
             2A6D656D73   
             657428766F   
             6964202A2C   
             696E742C69   
             6E74293B     
    000000AD 00                     .DATA.B     H'00
    000000AE 00000002               .RES.W      1
    000000B0              L589:
    000000B0 6368617220             .SDATA      "char *strcat(char *,char *);"
             2A73747263   
             6174286368   
             6172202A2C   
             6368617220   
             2A293B       
    000000CC 00                     .DATA.B     H'00
    000000CD 00000001               .RES.B      1
    000000CE 00000002               .RES.W      1
    000000D0              L590:
    000000D0 6368617220             .SDATA      "char *strncat(char *,char *,int);"
             2A7374726E   
             6361742863   
             686172202A   
             2C63686172   
             202A2C696E   
             74293B       
    000000F1 00                     .DATA.B     H'00
    000000F2 00000002               .RES.W      1
    000000F4              L591:
    000000F4 6368617220             .SDATA      "char *strchr(char *,int);"
             2A73747263   
             6872286368   
             6172202A2C   
             696E74293B   
    0000010D 00                     .DATA.B     H'00
    0000010E 00000002               .RES.W      1
    00000110              L592:
    00000110 6368617220             .SDATA      "char *strrchr(char *,int);"
             2A73747272   
             6368722863   
             686172202A   
             2C696E7429   
             3B           
    0000012A 00                     .DATA.B     H'00
    0000012B 00000001               .RES.B      1
    0000012C              L593:
    0000012C 696E742073             .SDATA      "int strcmp(char *,char *);"
             7472636D70   
             2863686172   
             202A2C6368   
             6172202A29   
             3B           
    00000146 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000147 00000001               .RES.B      1
    00000148              L594:
    00000148 696E742073             .SDATA      "int strncmp(char *,char *,int);"
             74726E636D   
             7028636861   
             72202A2C63   
             686172202A   
             2C696E7429   
             3B           
    00000167 00                     .DATA.B     H'00
    00000168              L595:
    00000168 6368617220             .SDATA      "char *strcpy(char *,char *);"
             2A73747263   
             7079286368   
             6172202A2C   
             6368617220   
             2A293B       
    00000184 00                     .DATA.B     H'00
    00000185 00000001               .RES.B      1
    00000186 00000002               .RES.W      1
    00000188              L596:
    00000188 6368617220             .SDATA      "char *strncpy(char *,char *,int);"
             2A7374726E   
             6370792863   
             686172202A   
             2C63686172   
             202A2C696E   
             74293B       
    000001A9 00                     .DATA.B     H'00
    000001AA 00000002               .RES.W      1
    000001AC              L597:
    000001AC 696E742073             .SDATA      "int strlen(char *);"
             74726C656E   
             2863686172   
             202A293B     
    000001BF 00                     .DATA.B     H'00
    000001C0              L598:
    000001C0 6368617220             .SDATA      "char *strstr(char *,char *);"
             2A73747273   
             7472286368   
             6172202A2C   
             6368617220   
             2A293B       
    000001DC 00                     .DATA.B     H'00

















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:33  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      111



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000032C Byte(s)
CONSTANT SECTION (C):                               000001DD Byte(s)
DATA     SECTION (D):                               00000084 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000058D Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           19
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          17
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            54






























*** COMMAND PARAMETER ***


  -subcommand=C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\hmk351.tmp 

