SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\dPicoc\clibrary.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      clibrary.c     1    #include "picoc.h"
      clibrary.c     2    #include "interpreter.h"
      clibrary.c     3    
      clibrary.c     4    /* the picoc version string */
      clibrary.c     5    static const char *VersionString = NULL;
      clibrary.c     6    
      clibrary.c     7    /* endian-ness checking */
      clibrary.c     8    static const int __ENDIAN_CHECK__ = 1;
      clibrary.c     9    
      clibrary.c    10    static int BigEndian = 0;
      clibrary.c    11    static int LittleEndian = 0;
      clibrary.c    12    
      clibrary.c    13    
      clibrary.c    14    /* global initialisation for libraries */
      clibrary.c    15    void LibraryInit()
P   00000000              _LibraryInit:                    ; function: LibraryInit
                                                           ; frame size=20
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
      clibrary.c    16    {
      clibrary.c    17        /* define the version number macro */
      clibrary.c    18        VersionString = TableStrRegister(PICOC_VERSION);
    00000004 D44C                   MOV.L       L624+2,R4  ; L507
    00000006 D34D                   MOV.L       L624+6,R3  ; _TableStrRegister
    00000008 430B                   JSR         @R3
    0000000A 0009                   NOP
    0000000C D24C                   MOV.L       L624+10,R2 ; __$VersionString
      clibrary.c    19        VariableDefinePlatformVar(NULL, "PICOC_VERSION", CharPtrType, (union AnyValue *)&VersionString, FALSE)
                         +;
    0000000E E300                   MOV         #0,R3
    00000010 D54E                   MOV.L       L624+22,R5 ; L508
    00000012 6723                   MOV         R2,R7
    00000014 2202                   MOV.L       R0,@R2
    00000016 DE4B                   MOV.L       L624+14,R14; _VariableDefinePlatformVar
    00000018 2F36                   MOV.L       R3,@-R15
    0000001A D24B                   MOV.L       L624+18,R2 ; _CharPtrType
    0000001C 6622                   MOV.L       @R2,R6
    0000001E 4E0B                   JSR         @R14
    00000020 6433                   MOV         R3,R4
      clibrary.c    20    
      clibrary.c    21        /* define endian-ness macros */
      clibrary.c    22        BigEndian = ((*(char*)&__ENDIAN_CHECK__) == 0);
      clibrary.c    23        LittleEndian = ((*(char*)&__ENDIAN_CHECK__) == 1);
      clibrary.c    24    
      clibrary.c    25        VariableDefinePlatformVar(NULL, "BIG_ENDIAN", &IntType, (union AnyValue *)&BigEndian, FALSE);
    00000022 E200                   MOV         #0,R2
    00000024 D74B                   MOV.L       L624+30,R7 ; __$BigEndian
    00000026 D14A                   MOV.L       L624+26,R1 ; __$__ENDIAN_CHECK__
    00000028 D64C                   MOV.L       L624+38,R6 ; _IntType
    0000002A 6310                   MOV.B       @R1,R3
    0000002C D54C                   MOV.L       L624+42,R5 ; L509
    0000002E 2338                   TST         R3,R3
    00000030 D348                   MOV.L       L624+30,R3 ; __$BigEndian
    00000032 0029                   MOVT        R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000034 2302                   MOV.L       R0,@R3
    00000036 6013                   MOV         R1,R0
    00000038 D347                   MOV.L       L624+34,R3 ; __$LittleEndian
    0000003A 6000                   MOV.B       @R0,R0
    0000003C 8801                   CMP/EQ      #1,R0
    0000003E 0029                   MOVT        R0
    00000040 2302                   MOV.L       R0,@R3
    00000042 2F26                   MOV.L       R2,@-R15
    00000044 4E0B                   JSR         @R14
    00000046 6423                   MOV         R2,R4
      clibrary.c    26        VariableDefinePlatformVar(NULL, "LITTLE_ENDIAN", &IntType, (union AnyValue *)&LittleEndian, FALSE);
    00000048 D743                   MOV.L       L624+34,R7 ; __$LittleEndian
    0000004A E300                   MOV         #0,R3
    0000004C D643                   MOV.L       L624+38,R6 ; _IntType
    0000004E 2F36                   MOV.L       R3,@-R15
    00000050 D544                   MOV.L       L624+46,R5 ; L510
    00000052 4E0B                   JSR         @R14
    00000054 6433                   MOV         R3,R4
      clibrary.c    27    }
    00000056 7F0C                   ADD         #12,R15
    00000058 4F26                   LDS.L       @R15+,PR
    0000005A 000B                   RTS
    0000005C 6EF6                   MOV.L       @R15+,R14
      clibrary.c    28    
      clibrary.c    29    /* add a library */
      clibrary.c    30    void LibraryAdd(struct Table *GlobalTable, const char *LibraryName, struct LibraryFunction *FuncList)
    0000005E              _LibraryAdd:                     ; function: LibraryAdd
                                                           ; frame size=76
    0000005E 2FE6                   MOV.L       R14,@-R15
    00000060 2FD6                   MOV.L       R13,@-R15
    00000062 2FC6                   MOV.L       R12,@-R15
    00000064 2FB6                   MOV.L       R11,@-R15
    00000066 2FA6                   MOV.L       R10,@-R15
    00000068 2F96                   MOV.L       R9,@-R15
    0000006A 2F86                   MOV.L       R8,@-R15
    0000006C 4F22                   STS.L       PR,@-R15
    0000006E 7FD8                   ADD         #-40,R15
      clibrary.c    31    {
      clibrary.c    32        struct ParseState Parser;
      clibrary.c    33        int Count;
      clibrary.c    34        char *Identifier;
      clibrary.c    35        struct ValueType *ReturnType;
      clibrary.c    36        struct Value *NewValue;
      clibrary.c    37        void *Tokens;
      clibrary.c    38        const char *IntrinsicName = TableStrRegister("c library");
    00000070 D43D                   MOV.L       L624+50,R4 ; L522
    00000072 D332                   MOV.L       L624+6,R3  ; _TableStrRegister
    00000074 430B                   JSR         @R3
    00000076 6A63                   MOV         R6,R10
      clibrary.c    39        
      clibrary.c    40        /* read all the library definitions */
      clibrary.c    41        for (Count = 0; FuncList[Count].Prototype != NULL; Count++)
    00000078 D83C                   MOV.L       L624+54,R8 ; _LexAnalyse
    0000007A E901                   MOV         #1,R9
    0000007C 6B03                   MOV         R0,R11
    0000007E A02C                   BRA         L605
    00000080 ED00                   MOV         #0,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000082              L606:                             
      clibrary.c    42        {
      clibrary.c    43            Tokens = LexAnalyse(IntrinsicName, FuncList[Count].Prototype, strlen((char *)FuncList[Count].Proto
                         +type), NULL);
    00000082 6ED3                   MOV         R13,R14
    00000084 D33A                   MOV.L       L624+58,R3 ; _strlen
    00000086 4E08                   SHLL2       R14
    00000088 4E00                   SHLL        R14
    0000008A 3EAC                   ADD         R10,R14
    0000008C 430B                   JSR         @R3
    0000008E 54E1                   MOV.L       @(4,R14),R4
    00000090 55E1                   MOV.L       @(4,R14),R5
    00000092 64B3                   MOV         R11,R4
    00000094 6603                   MOV         R0,R6
    00000096 480B                   JSR         @R8
    00000098 E700                   MOV         #0,R7
    0000009A 6C03                   MOV         R0,R12
      clibrary.c    44            LexInitParser(&Parser, FuncList[Count].Prototype, Tokens, IntrinsicName, TRUE);
    0000009C 2F96                   MOV.L       R9,@-R15
    0000009E 67B3                   MOV         R11,R7
    000000A0 D234                   MOV.L       L624+62,R2 ; _LexInitParser
    000000A2 66C3                   MOV         R12,R6
    000000A4 55E1                   MOV.L       @(4,R14),R5
    000000A6 64F3                   MOV         R15,R4
    000000A8 420B                   JSR         @R2
    000000AA 740C                   ADD         #12,R4
      clibrary.c    45            TypeParse(&Parser, &ReturnType, &Identifier, NULL);
    000000AC D332                   MOV.L       L624+66,R3 ; _TypeParse
    000000AE 7F04                   ADD         #4,R15
    000000B0 E700                   MOV         #0,R7
    000000B2 66F3                   MOV         R15,R6
    000000B4 7604                   ADD         #4,R6
    000000B6 65F3                   MOV         R15,R5
    000000B8 64F3                   MOV         R15,R4
    000000BA 430B                   JSR         @R3
    000000BC 7408                   ADD         #8,R4
      clibrary.c    46            NewValue = ParseFunctionDefinition(&Parser, ReturnType, Identifier);
    000000BE 64F3                   MOV         R15,R4
    000000C0 D32E                   MOV.L       L624+70,R3 ; _ParseFunctionDefinition
    000000C2 56F1                   MOV.L       @(4,R15),R6
    000000C4 65F2                   MOV.L       @R15,R5
    000000C6 430B                   JSR         @R3
    000000C8 7408                   ADD         #8,R4
    000000CA 6403                   MOV         R0,R4
      clibrary.c    47            NewValue->Val->FuncDef.Intrinsic = FuncList[Count].Func;
    000000CC 63E2                   MOV.L       @R14,R3
    000000CE 5241                   MOV.L       @(4,R4),R2
    000000D0 1235                   MOV.L       R3,@(20,R2)
      clibrary.c    48            HeapFreeMem(Tokens);
    000000D2 D22B                   MOV.L       L624+74,R2 ; _HeapFreeMem
    000000D4 420B                   JSR         @R2
    000000D6 64C3                   MOV         R12,R4
    000000D8 7D01                   ADD         #1,R13
    000000DA              L605:                             
    000000DA 63D3                   MOV         R13,R3
    000000DC 4308                   SHLL2       R3
    000000DE 4300                   SHLL        R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000E0 33AC                   ADD         R10,R3
    000000E2 5231                   MOV.L       @(4,R3),R2
    000000E4 2228                   TST         R2,R2
    000000E6 8BCC                   BF          L606
      clibrary.c    49        }
      clibrary.c    50    }
    000000E8 7F28                   ADD         #40,R15
    000000EA 4F26                   LDS.L       @R15+,PR
    000000EC 68F6                   MOV.L       @R15+,R8
    000000EE 69F6                   MOV.L       @R15+,R9
    000000F0 6AF6                   MOV.L       @R15+,R10
    000000F2 6BF6                   MOV.L       @R15+,R11
    000000F4 6CF6                   MOV.L       @R15+,R12
    000000F6 6DF6                   MOV.L       @R15+,R13
    000000F8 000B                   RTS
    000000FA 6EF6                   MOV.L       @R15+,R14
      clibrary.c    51    
      clibrary.c    52    /* portability-related I/O calls */
      clibrary.c    53    void PrintCh(char OutCh)
    000000FC              _PrintCh:                        ; function: PrintCh
                                                           ; frame size=0
      clibrary.c    54    {
      clibrary.c    55        dConsolePutChar(OutCh);
    000000FC D321                   MOV.L       L624+78,R3 ; _dConsolePutChar
    000000FE 432B                   JMP         @R3
    00000100 0009                   NOP
      clibrary.c    56    }
      clibrary.c    57    
      clibrary.c    58    void PrintSimpleInt(long Num)
    00000102              _PrintSimpleInt:                 ; function: PrintSimpleInt
                                                           ; frame size=12
    00000102 4F22                   STS.L       PR,@-R15
      clibrary.c    59    {
      clibrary.c    60        dPrintf("%ld", Num);
    00000104 2F46                   MOV.L       R4,@-R15
    00000106 D320                   MOV.L       L624+82,R3 ; L528
    00000108 D220                   MOV.L       L624+86,R2 ; _dPrintf
    0000010A 420B                   JSR         @R2
    0000010C 2F36                   MOV.L       R3,@-R15
      clibrary.c    61    }
    0000010E 7F08                   ADD         #8,R15
    00000110 4F26                   LDS.L       @R15+,PR
    00000112 000B                   RTS
    00000114 0009                   NOP
      clibrary.c    62    
      clibrary.c    63    void PrintStr(const char *Str)
    00000116              _PrintStr:                       ; function: PrintStr
                                                           ; frame size=0
      clibrary.c    64    {
      clibrary.c    65        dConsolePut(Str);
    00000116 D31E                   MOV.L       L624+90,R3 ; _dConsolePut
    00000118 432B                   JMP         @R3
    0000011A 0009                   NOP
      clibrary.c    66    }
      clibrary.c    67    
      clibrary.c    68    void PrintFP(double Num)
    0000011C              _PrintFP:                        ; function: PrintFP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=16
    0000011C 4F22                   STS.L       PR,@-R15
      clibrary.c    69    {
      clibrary.c    70        dPrintf("%f", Num);
    0000011E 53F2                   MOV.L       @(8,R15),R3
    00000120 D21C                   MOV.L       L624+94,R2 ; L533
    00000122 2F36                   MOV.L       R3,@-R15
    00000124 53F2                   MOV.L       @(8,R15),R3
    00000126 2F36                   MOV.L       R3,@-R15
    00000128 D318                   MOV.L       L624+86,R3 ; _dPrintf
    0000012A 430B                   JSR         @R3
    0000012C 2F26                   MOV.L       R2,@-R15
      clibrary.c    71    }
    0000012E 7F0C                   ADD         #12,R15
    00000130 4F26                   LDS.L       @R15+,PR
    00000132 000B                   RTS
    00000134 0009                   NOP
    00000136              L624:                             
    00000136 0000                   .DATA.W     0
    00000138 <00000000>             .DATA.L     L507
    0000013C <00000000>             .DATA.L     _TableStrRegister
    00000140 <00000000>             .DATA.L     __$VersionString
    00000144 <00000000>             .DATA.L     _VariableDefinePlatformVar
    00000148 <00000000>             .DATA.L     _CharPtrType
    0000014C <00000000>             .DATA.L     L508
    00000150 <00000000>             .DATA.L     __$__ENDIAN_CHECK__
    00000154 <00000000>             .DATA.L     __$BigEndian
    00000158 <00000000>             .DATA.L     __$LittleEndian
    0000015C <00000000>             .DATA.L     _IntType
    00000160 <00000000>             .DATA.L     L509
    00000164 <00000000>             .DATA.L     L510
    00000168 <00000000>             .DATA.L     L522
    0000016C <00000000>             .DATA.L     _LexAnalyse
    00000170 <00000000>             .DATA.L     _strlen
    00000174 <00000000>             .DATA.L     _LexInitParser
    00000178 <00000000>             .DATA.L     _TypeParse
    0000017C <00000000>             .DATA.L     _ParseFunctionDefinition
    00000180 <00000000>             .DATA.L     _HeapFreeMem
    00000184 <00000000>             .DATA.L     _dConsolePutChar
    00000188 <00000000>             .DATA.L     L528
    0000018C <00000000>             .DATA.L     _dPrintf
    00000190 <00000000>             .DATA.L     _dConsolePut
    00000194 <00000000>             .DATA.L     L533
      clibrary.c    72    void PrintType(struct ValueType *Typ)
    00000198              _PrintType:                      ; function: PrintType
                                                           ; frame size=8
    00000198 2FE6                   MOV.L       R14,@-R15
    0000019A 6E43                   MOV         R4,R14
    0000019C 4F22                   STS.L       PR,@-R15
      clibrary.c    73    {
      clibrary.c    74        switch (Typ->Base)
    0000019E 60E2                   MOV.L       @R14,R0
    000001A0 E112                   MOV         #18,R1
    000001A2 3012                   CMP/HS      R1,R0
    000001A4 8962                   BT          L607
    000001A6 4000                   SHLL        R0
    000001A8 6103                   MOV         R0,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001AA C702                   MOVA        L626,R0
    000001AC 001D                   MOV.W       @(R0,R1),R0
    000001AE 0023                   BRAF        R0
    000001B0 0009                   NOP
    000001B2              L625:                             
    000001B2 00000000               .DATA.W     0
    000001B4              L626:
    000001B4 0026                   .DATA.W     L567-L625
    000001B6 002C                   .DATA.W     L569-L625
    000001B8 0032                   .DATA.W     L571-L625
    000001BA 0038                   .DATA.W     L573-L625
    000001BC 003E                   .DATA.W     L575-L625
    000001BE 0044                   .DATA.W     L577-L625
    000001C0 004A                   .DATA.W     L579-L625
    000001C2 0050                   .DATA.W     L581-L625
    000001C4 0056                   .DATA.W     L583-L625
    000001C6 005C                   .DATA.W     L585-L625
    000001C8 0062                   .DATA.W     L587-L625
    000001CA 006A                   .DATA.W     L589-L625
    000001CC 0078                   .DATA.W     L590-L625
    000001CE 0092                   .DATA.W     L591-L625
    000001D0 0098                   .DATA.W     L593-L625
    000001D2 00A2                   .DATA.W     L595-L625
    000001D4 00AC                   .DATA.W     L597-L625
    000001D6 00B2                   .DATA.W     L599-L625
      clibrary.c    75        {
      clibrary.c    76            case TypeVoid:          PrintStr("void"); break;
    000001D8              L567:                            ; case label 
    000001D8 D426                   MOV.L       L627+2,R4  ; L537
    000001DA A01C                   BRA         L619
    000001DC 0009                   NOP
    000001DE              L569:                            ; case label 
      clibrary.c    77            case TypeInt:           PrintStr("int"); break;
    000001DE D426                   MOV.L       L627+6,R4  ; L538
    000001E0 A019                   BRA         L619
    000001E2 0009                   NOP
    000001E4              L571:                            ; case label 
      clibrary.c    78            case TypeShort:         PrintStr("short"); break;
    000001E4 D425                   MOV.L       L627+10,R4 ; L539
    000001E6 A016                   BRA         L619
    000001E8 0009                   NOP
    000001EA              L573:                            ; case label 
      clibrary.c    79            case TypeChar:          PrintStr("char"); break;
    000001EA D425                   MOV.L       L627+14,R4 ; L540
    000001EC A013                   BRA         L619
    000001EE 0009                   NOP
    000001F0              L575:                            ; case label 
      clibrary.c    80            case TypeLong:          PrintStr("long"); break;
    000001F0 D424                   MOV.L       L627+18,R4 ; L541
    000001F2 A010                   BRA         L619
    000001F4 0009                   NOP
    000001F6              L577:                            ; case label 
      clibrary.c    81            case TypeUnsignedInt:   PrintStr("unsigned int"); break;
    000001F6 D424                   MOV.L       L627+22,R4 ; L542
    000001F8 A00D                   BRA         L619
    000001FA 0009                   NOP
    000001FC              L579:                            ; case label 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      clibrary.c    82            case TypeUnsignedShort: PrintStr("unsigned short"); break;
    000001FC D423                   MOV.L       L627+26,R4 ; L543
    000001FE A00A                   BRA         L619
    00000200 0009                   NOP
    00000202              L581:                            ; case label 
      clibrary.c    83            case TypeUnsignedLong:  PrintStr("unsigned long"); break;
    00000202 D423                   MOV.L       L627+30,R4 ; L544
    00000204 A007                   BRA         L619
    00000206 0009                   NOP
    00000208              L583:                            ; case label 
      clibrary.c    84            case TypeFP:            PrintStr("double"); break;
    00000208 D422                   MOV.L       L627+34,R4 ; L545
    0000020A A004                   BRA         L619
    0000020C 0009                   NOP
    0000020E              L585:                            ; case label 
      clibrary.c    85            case TypeFunction:      PrintStr("function"); break;
    0000020E D422                   MOV.L       L627+38,R4 ; L546
    00000210 A001                   BRA         L619
    00000212 0009                   NOP
    00000214              L587:                            ; case label 
      clibrary.c    86            case TypeMacro:         PrintStr("macro"); break;
    00000214 D421                   MOV.L       L627+42,R4 ; L547
    00000216              L619:                             
    00000216 4F26                   LDS.L       @R15+,PR
    00000218 AF7D                   BRA         _PrintStr
    0000021A 6EF6                   MOV.L       @R15+,R14
    0000021C              L589:                            ; case label 
      clibrary.c    87            case TypePointer:       if (Typ->FromType) PrintType(Typ->FromType); PrintCh('*'); break;
    0000021C 53E5                   MOV.L       @(20,R14),R3
    0000021E 2338                   TST         R3,R3
    00000220 8901                   BT          L608
    00000222 BFB9                   BSR         _PrintType
    00000224 54E5                   MOV.L       @(20,R14),R4
    00000226              L608:                             
    00000226 A00A                   BRA         L620
    00000228 E42A                   MOV         #42,R4
    0000022A              L590:                            ; case label 
      clibrary.c    88            case TypeArray:         PrintType(Typ->FromType); PrintCh('['); if (Typ->ArraySize != 0) PrintSimp
                         +leInt(Typ->ArraySize); PrintCh(']'); break;
    0000022A BFB5                   BSR         _PrintType
    0000022C 54E5                   MOV.L       @(20,R14),R4
    0000022E BF65                   BSR         _PrintCh
    00000230 E45B                   MOV         #91,R4
    00000232 52E1                   MOV.L       @(4,R14),R2
    00000234 2228                   TST         R2,R2
    00000236 8901                   BT          L609
    00000238 BF63                   BSR         _PrintSimpleInt
    0000023A 54E1                   MOV.L       @(4,R14),R4
    0000023C              L609:                             
    0000023C E45D                   MOV         #93,R4
    0000023E              L620:                             
    0000023E 4F26                   LDS.L       @R15+,PR
    00000240 AF5C                   BRA         _PrintCh
    00000242 6EF6                   MOV.L       @R15+,R14
    00000244              L591:                            ; case label 
      clibrary.c    89            case TypeStruct:        PrintStr("struct "); PrintStr(Typ->Identifier); break;
    00000244 D416                   MOV.L       L627+46,R4 ; L548




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000246 A001                   BRA         L621
    00000248 0009                   NOP
    0000024A              L593:                            ; case label 
      clibrary.c    90            case TypeUnion:         PrintStr("union "); PrintStr(Typ->Identifier); break;
    0000024A D416                   MOV.L       L627+50,R4 ; L549
    0000024C              L621:                             
    0000024C BF63                   BSR         _PrintStr
    0000024E 0009                   NOP
    00000250 A003                   BRA         L555
    00000252 0009                   NOP
    00000254              L595:                            ; case label 
      clibrary.c    91            case TypeEnum:          PrintStr("enum "); PrintStr(Typ->Identifier); break;
    00000254 D414                   MOV.L       L627+54,R4 ; L550
    00000256 BF5E                   BSR         _PrintStr
    00000258 0009                   NOP
    0000025A              L555:
    0000025A A004                   BRA         L623
    0000025C 54E4                   MOV.L       @(16,R14),R4
    0000025E              L597:                            ; case label 
      clibrary.c    92            case TypeGotoLabel:     PrintStr("goto label "); break;
    0000025E D413                   MOV.L       L627+58,R4 ; L551
    00000260 A001                   BRA         L623
    00000262 0009                   NOP
    00000264              L599:                            ; case label 
      clibrary.c    93            case Type_Type:         PrintStr("type "); break;
    00000264 D412                   MOV.L       L627+62,R4 ; L552
    00000266              L623:                             
    00000266 4F26                   LDS.L       @R15+,PR
    00000268 AF55                   BRA         _PrintStr
    0000026A 6EF6                   MOV.L       @R15+,R14
    0000026C              L607:                             
      clibrary.c    94        }
      clibrary.c    95    }
    0000026C 4F26                   LDS.L       @R15+,PR
    0000026E 000B                   RTS
    00000270 6EF6                   MOV.L       @R15+,R14
    00000272              L627:                             
    00000272 0000                   .DATA.W     0
    00000274 <00000000>             .DATA.L     L537
    00000278 <00000000>             .DATA.L     L538
    0000027C <00000000>             .DATA.L     L539
    00000280 <00000000>             .DATA.L     L540
    00000284 <00000000>             .DATA.L     L541
    00000288 <00000000>             .DATA.L     L542
    0000028C <00000000>             .DATA.L     L543
    00000290 <00000000>             .DATA.L     L544
    00000294 <00000000>             .DATA.L     L545
    00000298 <00000000>             .DATA.L     L546
    0000029C <00000000>             .DATA.L     L547
    000002A0 <00000000>             .DATA.L     L548
    000002A4 <00000000>             .DATA.L     L549
    000002A8 <00000000>             .DATA.L     L550
    000002AC <00000000>             .DATA.L     L551
    000002B0 <00000000>             .DATA.L     L552
      clibrary.c    96    
D   00000000              __$VersionString:                ; static: VersionString
    00000000 00000000               .DATA.L     H'00000000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000004              __$BigEndian:                    ; static: BigEndian
    00000004 00000000               .DATA.L     H'00000000
    00000008              __$LittleEndian:                 ; static: LittleEndian
    00000008 00000000               .DATA.L     H'00000000
C   00000000              __$__ENDIAN_CHECK__:             ; static: __ENDIAN_CHECK__
    00000000 00000001               .DATA.L     H'00000001
    00000004              L507:
    00000004 76322E3163             .SDATA      "v2.1c"
    00000009 00                     .DATA.B     H'00
    0000000A 00000002               .RES.W      1
    0000000C              L508:
    0000000C 5049434F43             .SDATA      "PICOC_VERSION"
             5F56455253   
             494F4E       
    00000019 00                     .DATA.B     H'00
    0000001A 00000002               .RES.W      1
    0000001C              L509:
    0000001C 4249475F45             .SDATA      "BIG_ENDIAN"
             4E4449414E   
    00000026 00                     .DATA.B     H'00
    00000027 00000001               .RES.B      1
    00000028              L510:
    00000028 4C4954544C             .SDATA      "LITTLE_ENDIAN"
             455F454E44   
             49414E       
    00000035 00                     .DATA.B     H'00
    00000036 00000002               .RES.W      1
    00000038              L522:
    00000038 63206C6962             .SDATA      "c library"
             72617279     
    00000041 00                     .DATA.B     H'00
    00000042 00000002               .RES.W      1
    00000044              L528:
    00000044 256C64                 .SDATA      "%ld"
    00000047 00                     .DATA.B     H'00
    00000048              L533:
    00000048 2566                   .SDATA      "%f"
    0000004A 00                     .DATA.B     H'00
    0000004B 00000001               .RES.B      1
    0000004C              L537:
    0000004C 766F6964               .SDATA      "void"
    00000050 00                     .DATA.B     H'00
    00000051 00000001               .RES.B      1
    00000052 00000002               .RES.W      1
    00000054              L538:
    00000054 696E74                 .SDATA      "int"
    00000057 00                     .DATA.B     H'00
    00000058              L539:
    00000058 73686F7274             .SDATA      "short"
    0000005D 00                     .DATA.B     H'00
    0000005E 00000002               .RES.W      1
    00000060              L540:
    00000060 63686172               .SDATA      "char"
    00000064 00                     .DATA.B     H'00
    00000065 00000001               .RES.B      1
    00000066 00000002               .RES.W      1
    00000068              L541:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000068 6C6F6E67               .SDATA      "long"
    0000006C 00                     .DATA.B     H'00
    0000006D 00000001               .RES.B      1
    0000006E 00000002               .RES.W      1
    00000070              L542:
    00000070 756E736967             .SDATA      "unsigned int"
             6E65642069   
             6E74         
    0000007C 00                     .DATA.B     H'00
    0000007D 00000001               .RES.B      1
    0000007E 00000002               .RES.W      1
    00000080              L543:
    00000080 756E736967             .SDATA      "unsigned short"
             6E65642073   
             686F7274     
    0000008E 00                     .DATA.B     H'00
    0000008F 00000001               .RES.B      1
    00000090              L544:
    00000090 756E736967             .SDATA      "unsigned long"
             6E6564206C   
             6F6E67       
    0000009D 00                     .DATA.B     H'00
    0000009E 00000002               .RES.W      1
    000000A0              L545:
    000000A0 646F75626C             .SDATA      "double"
             65           
    000000A6 00                     .DATA.B     H'00
    000000A7 00000001               .RES.B      1
    000000A8              L546:
    000000A8 66756E6374             .SDATA      "function"
             696F6E       
    000000B0 00                     .DATA.B     H'00
    000000B1 00000001               .RES.B      1
    000000B2 00000002               .RES.W      1
    000000B4              L547:
    000000B4 6D6163726F             .SDATA      "macro"
    000000B9 00                     .DATA.B     H'00
    000000BA 00000002               .RES.W      1
    000000BC              L548:
    000000BC 7374727563             .SDATA      "struct "
             7420         
    000000C3 00                     .DATA.B     H'00
    000000C4              L549:
    000000C4 756E696F6E             .SDATA      "union "
             20           
    000000CA 00                     .DATA.B     H'00
    000000CB 00000001               .RES.B      1
    000000CC              L550:
    000000CC 656E756D20             .SDATA      "enum "
    000000D1 00                     .DATA.B     H'00
    000000D2 00000002               .RES.W      1
    000000D4              L551:
    000000D4 676F746F20             .SDATA      "goto label "
             6C6162656C   
             20           
    000000DF 00                     .DATA.B     H'00
    000000E0              L552:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000E0 7479706520             .SDATA      "type "
    000000E5 00                     .DATA.B     H'00



























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:37  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         1




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       96



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000002B4 Byte(s)
CONSTANT SECTION (C):                               000000E6 Byte(s)
DATA     SECTION (D):                               0000000C Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000003A6 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           13
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           7
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            75






























*** COMMAND PARAMETER ***


  -subcommand=C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\hmk353.tmp 

