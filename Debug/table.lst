SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\dPicoc\table.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         table.c     1    #include "interpreter.h"
         table.c     2    
         table.c     3    struct Table StringTable;
         table.c     4    struct TableEntry *StringHashTable[STRING_TABLE_SIZE];
         table.c     5    char *StrEmpty = NULL;
         table.c     6    
         table.c     7    /* initialise the shared string system */
         table.c     8    void TableInit()
P   00000000              _TableInit:                      ; function: TableInit
                                                           ; frame size=4
    00000000 4F22                   STS.L       PR,@-R15
         table.c     9    {
         table.c    10        TableInitTable(&StringTable, &StringHashTable[0], STRING_TABLE_SIZE, TRUE);
    00000002 E701                   MOV         #1,R7
    00000004 D59D                   MOV.L       L614+2,R5  ; _StringHashTable
    00000006 D49E                   MOV.L       L614+6,R4  ; _StringTable
    00000008 B019                   BSR         _TableInitTable
    0000000A E661                   MOV         #97,R6
         table.c    11        StrEmpty = TableStrRegister("");
    0000000C D49D                   MOV.L       L614+10,R4 ; L496
    0000000E B14F                   BSR         _TableStrRegister
    00000010 0009                   NOP
    00000012 D39D                   MOV.L       L614+14,R3 ; _StrEmpty
         table.c    12    }
    00000014 4F26                   LDS.L       @R15+,PR
    00000016 000B                   RTS
    00000018 2302                   MOV.L       R0,@R3
         table.c    13    
         table.c    14    /* hash function for strings */
         table.c    15    static unsigned int TableHash(const char *Key, int Len)
    0000001A              __$TableHash:                    ; function: TableHash
                                                           ; frame size=0
         table.c    16    {
         table.c    17        unsigned int Hash = Len;
    0000001A 6153                   MOV         R5,R1
         table.c    18        int Offset;
         table.c    19        int Count;
         table.c    20        
         table.c    21        for (Count = 0, Offset = 8; Count < Len; Count++, Offset+=7)
    0000001C E700                   MOV         #0,R7
    0000001E E608                   MOV         #8,R6
    00000020 4515                   CMP/PL      R5
    00000022 8F0A                   BF/S        L582
    00000024 E019                   MOV         #25,R0
    00000026              L583:                             
         table.c    22        {
         table.c    23            if (Offset > sizeof(unsigned int) * 8 - 7)
    00000026 3606                   CMP/HI      R0,R6
    00000028 8F01                   BF/S        L584
         table.c    24                Offset -= sizeof(unsigned int) * 8 - 6;
         table.c    25                
         table.c    26            Hash ^= *Key++ << Offset;
    0000002A 6344                   MOV.B       @R4+,R3
    0000002C 76E6                   ADD         #-26,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000002E              L584:                             
    0000002E 436C                   SHAD        R6,R3
    00000030 213A                   XOR         R3,R1
    00000032 7701                   ADD         #1,R7
    00000034 3753                   CMP/GE      R5,R7
    00000036 8FF6                   BF/S        L583
    00000038 7607                   ADD         #7,R6
    0000003A              L582:                             
         table.c    27        }
         table.c    28        
         table.c    29        return Hash;
         table.c    30    }
    0000003A 000B                   RTS
    0000003C 6013                   MOV         R1,R0
         table.c    31    
         table.c    32    /* initialise a table */
         table.c    33    void TableInitTable(struct Table *Tbl, struct TableEntry **HashTable, int Size, int OnHeap)
    0000003E              _TableInitTable:                 ; function: TableInitTable
                                                           ; frame size=8
    0000003E 7FF8                   ADD         #-8,R15
    00000040 2F52                   MOV.L       R5,@R15
         table.c    34    {
         table.c    35        Tbl->Size = Size;
    00000042 6363                   MOV         R6,R3
    00000044 1F61                   MOV.L       R6,@(4,R15)
         table.c    36        Tbl->OnHeap = OnHeap;
    00000046 6073                   MOV         R7,R0
    00000048 2431                   MOV.W       R3,@R4
         table.c    37        Tbl->HashTable = HashTable;
         table.c    38        memset((void *)HashTable, '\0', sizeof(struct TableEntry *) * Size);
    0000004A E500                   MOV         #0,R5
    0000004C 8141                   MOV.W       R0,@(2,R4)
    0000004E 63F2                   MOV.L       @R15,R3
    00000050 1431                   MOV.L       R3,@(4,R4)
    00000052 56F1                   MOV.L       @(4,R15),R6
    00000054 64F2                   MOV.L       @R15,R4
    00000056 4608                   SHLL2       R6
    00000058 D38C                   MOV.L       L614+18,R3 ; _memset
    0000005A 432B                   JMP         @R3
    0000005C 7F08                   ADD         #8,R15
         table.c    39    }
         table.c    40    
         table.c    41    /* check a hash table entry for a key */
         table.c    42    static struct TableEntry *TableSearch(struct Table *Tbl, const char *Key, int *AddAt)
    0000005E              __$TableSearch:                  ; function: TableSearch
                                                           ; frame size=8
                                                           ; used runtime library name:
                                                           ; __modlu
    0000005E 2FE6                   MOV.L       R14,@-R15
    00000060 4F22                   STS.L       PR,@-R15
         table.c    43    {
         table.c    44        struct TableEntry *Entry;
         table.c    45        int HashValue = ((unsigned long)Key) % Tbl->Size;   /* shared strings have unique addresses so we don'
                         +t need to hash them */
    00000062 6041                   MOV.W       @R4,R0
    00000064 D38A                   MOV.L       L614+22,R3 ; __modlu
    00000066 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000068 6153                   MOV         R5,R1
    0000006A 6E03                   MOV         R0,R14
         table.c    46        
         table.c    47        for (Entry = Tbl->HashTable[HashValue]; Entry != NULL; Entry = Entry->Next)
    0000006C 6703                   MOV         R0,R7
    0000006E 4708                   SHLL2       R7
    00000070 5041                   MOV.L       @(4,R4),R0
    00000072 A008                   BRA         L586
    00000074 077E                   MOV.L       @(R0,R7),R7
    00000076              L587:                             
         table.c    48        {
         table.c    49            if (Entry->p.v.Key == Key)
    00000076 5273                   MOV.L       @(12,R7),R2
    00000078 3250                   CMP/EQ      R5,R2
    0000007A 8B03                   BF          L588
         table.c    50                return Entry;   /* found */
    0000007C 4F26                   LDS.L       @R15+,PR
    0000007E 6073                   MOV         R7,R0
    00000080 000B                   RTS
    00000082 6EF6                   MOV.L       @R15+,R14
    00000084              L588:                             
    00000084 6772                   MOV.L       @R7,R7
    00000086              L586:                             
    00000086 2778                   TST         R7,R7
    00000088 8BF5                   BF          L587
         table.c    51        }
         table.c    52        
         table.c    53        *AddAt = HashValue;    /* didn't find it in the chain */
         table.c    54        return NULL;
    0000008A E000                   MOV         #0,R0
    0000008C 26E2                   MOV.L       R14,@R6
         table.c    55    }
    0000008E              L589:                             
    0000008E 4F26                   LDS.L       @R15+,PR
    00000090 000B                   RTS
    00000092 6EF6                   MOV.L       @R15+,R14
         table.c    56    
         table.c    57    /* set an identifier to a value. returns FALSE if it already exists. 
         table.c    58     * Key must be a shared string from TableStrRegister() */
         table.c    59    int TableSet(struct Table *Tbl, char *Key, struct Value *Val, const char *DeclFileName, int DeclLine, int 
                         +DeclColumn)
    00000094              _TableSet:                       ; function: TableSet
                                                           ; frame size=24
    00000094 2FE6                   MOV.L       R14,@-R15
    00000096 6E43                   MOV         R4,R14
    00000098 4F22                   STS.L       PR,@-R15
    0000009A 7FF0                   ADD         #-16,R15
    0000009C 1F51                   MOV.L       R5,@(4,R15)
    0000009E 1F62                   MOV.L       R6,@(8,R15)
    000000A0 1F73                   MOV.L       R7,@(12,R15)
         table.c    60    {
         table.c    61        int AddAt;
         table.c    62        struct TableEntry *FoundEntry = TableSearch(Tbl, Key, &AddAt);
    000000A2 66F3                   MOV         R15,R6
    000000A4 55F1                   MOV.L       @(4,R15),R5
    000000A6 BFDA                   BSR         __$TableSearch
    000000A8 64E3                   MOV         R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000AA 6403                   MOV         R0,R4
         table.c    63        
         table.c    64        if (FoundEntry == NULL)
    000000AC 2448                   TST         R4,R4
    000000AE 8B1E                   BF          L590
         table.c    65        {   /* add it to the table */
         table.c    66            struct TableEntry *NewEntry = VariableAlloc(NULL, sizeof(struct TableEntry), Tbl->OnHeap);
    000000B0 85E1                   MOV.W       @(2,R14),R0
    000000B2 E514                   MOV         #20,R5
    000000B4 D377                   MOV.L       L614+26,R3 ; _VariableAlloc
    000000B6 6603                   MOV         R0,R6
    000000B8 430B                   JSR         @R3
    000000BA E400                   MOV         #0,R4
         table.c    67            NewEntry->DeclFileName = DeclFileName;
    000000BC 52F3                   MOV.L       @(12,R15),R2
    000000BE 6403                   MOV         R0,R4
    000000C0 1421                   MOV.L       R2,@(4,R4)
         table.c    68            NewEntry->DeclLine = DeclLine;
    000000C2 85FD                   MOV.W       @(26,R15),R0
    000000C4 8144                   MOV.W       R0,@(8,R4)
         table.c    69            NewEntry->DeclColumn = DeclColumn;
    000000C6 85FF                   MOV.W       @(30,R15),R0
    000000C8 8145                   MOV.W       R0,@(10,R4)
         table.c    70            NewEntry->p.v.Key = Key;
    000000CA 53F1                   MOV.L       @(4,R15),R3
    000000CC 1433                   MOV.L       R3,@(12,R4)
         table.c    71            NewEntry->p.v.Val = Val;
    000000CE 52F2                   MOV.L       @(8,R15),R2
    000000D0 1424                   MOV.L       R2,@(16,R4)
         table.c    72            NewEntry->Next = Tbl->HashTable[AddAt];
    000000D2 63F2                   MOV.L       @R15,R3
    000000D4 50E1                   MOV.L       @(4,R14),R0
    000000D6 4308                   SHLL2       R3
    000000D8 033E                   MOV.L       @(R0,R3),R3
    000000DA 2432                   MOV.L       R3,@R4
         table.c    73            Tbl->HashTable[AddAt] = NewEntry;
    000000DC 62F2                   MOV.L       @R15,R2
    000000DE 4208                   SHLL2       R2
    000000E0 50E1                   MOV.L       @(4,R14),R0
    000000E2 0246                   MOV.L       R4,@(R0,R2)
         table.c    74            return TRUE;
    000000E4 E001                   MOV         #1,R0
    000000E6 7F10                   ADD         #16,R15
    000000E8 4F26                   LDS.L       @R15+,PR
    000000EA 000B                   RTS
    000000EC 6EF6                   MOV.L       @R15+,R14
    000000EE              L590:                             
         table.c    75        }
         table.c    76    
         table.c    77        return FALSE;
    000000EE E000                   MOV         #0,R0
         table.c    78    }
    000000F0              L591:                             
    000000F0 7F10                   ADD         #16,R15
    000000F2 4F26                   LDS.L       @R15+,PR
    000000F4 000B                   RTS
    000000F6 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         table.c    79    
         table.c    80    /* find a value in a table. returns FALSE if not found. 
         table.c    81     * Key must be a shared string from TableStrRegister() */
         table.c    82    int TableGet(struct Table *Tbl, const char *Key, struct Value **Val, const char **DeclFileName, int *DeclL
                         +ine, int *DeclColumn)
    000000F8              _TableGet:                       ; function: TableGet
                                                           ; frame size=16
    000000F8 4F22                   STS.L       PR,@-R15
    000000FA 7FF4                   ADD         #-12,R15
    000000FC 1F62                   MOV.L       R6,@(8,R15)
         table.c    83    {
         table.c    84        int AddAt;
         table.c    85        struct TableEntry *FoundEntry = TableSearch(Tbl, Key, &AddAt);
    000000FE 66F3                   MOV         R15,R6
    00000100 2F72                   MOV.L       R7,@R15
    00000102 BFAC                   BSR         __$TableSearch
    00000104 7604                   ADD         #4,R6
    00000106 6403                   MOV         R0,R4
         table.c    86        if (FoundEntry == NULL)
    00000108 2448                   TST         R4,R4
    0000010A 8B03                   BF          L592
         table.c    87            return FALSE;
    0000010C 7F0C                   ADD         #12,R15
    0000010E 4F26                   LDS.L       @R15+,PR
    00000110 000B                   RTS
    00000112 E000                   MOV         #0,R0
    00000114              L592:                             
         table.c    88        
         table.c    89        *Val = FoundEntry->p.v.Val;
    00000114 53F2                   MOV.L       @(8,R15),R3
    00000116 5244                   MOV.L       @(16,R4),R2
    00000118 2322                   MOV.L       R2,@R3
         table.c    90        
         table.c    91        if (DeclFileName != NULL)
    0000011A 63F2                   MOV.L       @R15,R3
    0000011C 2338                   TST         R3,R3
    0000011E 890A                   BT          L594
         table.c    92        {
         table.c    93            *DeclFileName = FoundEntry->DeclFileName;
    00000120 63F2                   MOV.L       @R15,R3
    00000122 5241                   MOV.L       @(4,R4),R2
    00000124 2322                   MOV.L       R2,@R3
         table.c    94            *DeclLine = FoundEntry->DeclLine;
    00000126 53F4                   MOV.L       @(16,R15),R3
    00000128 8544                   MOV.W       @(8,R4),R0
    0000012A 600D                   EXTU.W      R0,R0
    0000012C 2302                   MOV.L       R0,@R3
         table.c    95            *DeclColumn = FoundEntry->DeclColumn;
    0000012E 53F5                   MOV.L       @(20,R15),R3
    00000130 8545                   MOV.W       @(10,R4),R0
    00000132 600D                   EXTU.W      R0,R0
    00000134 2302                   MOV.L       R0,@R3
    00000136              L594:                             
         table.c    96        }
         table.c    97        
         table.c    98        return TRUE;
    00000136 E001                   MOV         #1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         table.c    99    }
    00000138              L593:                             
    00000138 7F0C                   ADD         #12,R15
    0000013A 4F26                   LDS.L       @R15+,PR
    0000013C 000B                   RTS
    0000013E 0009                   NOP
         table.c   100    
         table.c   101    /* remove an entry from the table */
         table.c   102    struct Value *TableDelete(struct Table *Tbl, const char *Key)
    00000140              _TableDelete:                    ; function: TableDelete
                                                           ; frame size=12
                                                           ; used runtime library name:
                                                           ; __modlu
    00000140 2FE6                   MOV.L       R14,@-R15
    00000142 2FD6                   MOV.L       R13,@-R15
    00000144 4F22                   STS.L       PR,@-R15
         table.c   103    {
         table.c   104        struct TableEntry **EntryPtr;
         table.c   105        int HashValue = ((unsigned long)Key) % Tbl->Size;   /* shared strings have unique addresses so we don'
                         +t need to hash them */
    00000146 6041                   MOV.W       @R4,R0
    00000148 D351                   MOV.L       L614+22,R3 ; __modlu
    0000014A 430B                   JSR         @R3
    0000014C 6153                   MOV         R5,R1
    0000014E 6703                   MOV         R0,R7
         table.c   106        
         table.c   107        for (EntryPtr = &Tbl->HashTable[HashValue]; *EntryPtr != NULL; EntryPtr = &(*EntryPtr)->Next)
    00000150 DE51                   MOV.L       L614+30,R14; _HeapFreeMem
    00000152 6603                   MOV         R0,R6
    00000154 5341                   MOV.L       @(4,R4),R3
    00000156 4608                   SHLL2       R6
    00000158 A00D                   BRA         L595
    0000015A 363C                   ADD         R3,R6
    0000015C              L596:                             
         table.c   108        {
         table.c   109            if ((*EntryPtr)->p.v.Key == Key)
    0000015C 6162                   MOV.L       @R6,R1
    0000015E 5313                   MOV.L       @(12,R1),R3
    00000160 3350                   CMP/EQ      R5,R3
    00000162 8B06                   BF          L597
         table.c   110            {
         table.c   111                struct TableEntry *DeleteEntry = *EntryPtr;
    00000164 6462                   MOV.L       @R6,R4
         table.c   112                struct Value *Val = DeleteEntry->p.v.Val;
    00000166 5D44                   MOV.L       @(16,R4),R13
         table.c   113                *EntryPtr = DeleteEntry->Next;
    00000168 6342                   MOV.L       @R4,R3
         table.c   114                HeapFreeMem(DeleteEntry);
    0000016A 4E0B                   JSR         @R14
    0000016C 2632                   MOV.L       R3,@R6
         table.c   115    
         table.c   116                return Val;
    0000016E A006                   BRA         L598
    00000170 60D3                   MOV         R13,R0
    00000172              L597:                             
    00000172 6262                   MOV.L       @R6,R2
    00000174 6623                   MOV         R2,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000176              L595:                             
    00000176 6362                   MOV.L       @R6,R3
    00000178 2338                   TST         R3,R3
    0000017A 8BEF                   BF          L596
         table.c   117            }
         table.c   118        }
         table.c   119    
         table.c   120        return NULL;
    0000017C E000                   MOV         #0,R0
         table.c   121    }
    0000017E              L598:                             
    0000017E 4F26                   LDS.L       @R15+,PR
    00000180 6DF6                   MOV.L       @R15+,R13
    00000182 000B                   RTS
    00000184 6EF6                   MOV.L       @R15+,R14
         table.c   122    
         table.c   123    /* check a hash table entry for an identifier */
         table.c   124    static struct TableEntry *TableSearchIdentifier(struct Table *Tbl, const char *Key, int Len, int *AddAt)
    00000186              __$TableSearchIdentifier:        ; function: TableSearchIdentifier
                                                           ; frame size=32
                                                           ; used runtime library name:
                                                           ; __modlu
    00000186 2FE6                   MOV.L       R14,@-R15
    00000188 2FD6                   MOV.L       R13,@-R15
    0000018A 6D63                   MOV         R6,R13
    0000018C 2FC6                   MOV.L       R12,@-R15
    0000018E 2FB6                   MOV.L       R11,@-R15
    00000190 2FA6                   MOV.L       R10,@-R15
    00000192 6A53                   MOV         R5,R10
    00000194 4F22                   STS.L       PR,@-R15
         table.c   125    {
         table.c   126        struct TableEntry *Entry;
         table.c   127        int HashValue = TableHash(Key, Len) % Tbl->Size;
    00000196 65D3                   MOV         R13,R5
    00000198 7FF8                   ADD         #-8,R15
    0000019A 2F42                   MOV.L       R4,@R15
    0000019C 1F71                   MOV.L       R7,@(4,R15)
    0000019E BF3C                   BSR         __$TableHash
    000001A0 64A3                   MOV         R10,R4
    000001A2 6103                   MOV         R0,R1
    000001A4 62F2                   MOV.L       @R15,R2
    000001A6 6321                   MOV.W       @R2,R3
    000001A8 D239                   MOV.L       L614+22,R2 ; __modlu
    000001AA 420B                   JSR         @R2
    000001AC 6033                   MOV         R3,R0
    000001AE 6B03                   MOV         R0,R11
         table.c   128        
         table.c   129        for (Entry = Tbl->HashTable[HashValue]; Entry != NULL; Entry = Entry->Next)
    000001B0 DC3A                   MOV.L       L614+34,R12; _strncmp
    000001B2 6EB3                   MOV         R11,R14
    000001B4 60F2                   MOV.L       @R15,R0
    000001B6 4E08                   SHLL2       R14
    000001B8 5001                   MOV.L       @(4,R0),R0
    000001BA A010                   BRA         L599
    000001BC 0EEE                   MOV.L       @(R0,R14),R14
    000001BE              L600:                             
         table.c   130        {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         table.c   131            if (strncmp(&Entry->p.Key[0], (char *)Key, Len) == 0 && Entry->p.Key[Len] == '\0')
    000001BE 66D3                   MOV         R13,R6
    000001C0 65A3                   MOV         R10,R5
    000001C2 64E3                   MOV         R14,R4
    000001C4 4C0B                   JSR         @R12
    000001C6 740C                   ADD         #12,R4
    000001C8 2008                   TST         R0,R0
    000001CA 8B07                   BF          L601
    000001CC 63E3                   MOV         R14,R3
    000001CE 730C                   ADD         #12,R3
    000001D0 33DC                   ADD         R13,R3
    000001D2 6230                   MOV.B       @R3,R2
    000001D4 2228                   TST         R2,R2
    000001D6 8B01                   BF          L601
         table.c   132                return Entry;   /* found */
    000001D8 A006                   BRA         L602
    000001DA 60E3                   MOV         R14,R0
    000001DC              L601:                             
    000001DC 6EE2                   MOV.L       @R14,R14
    000001DE              L599:                             
    000001DE 2EE8                   TST         R14,R14
    000001E0 8BED                   BF          L600
         table.c   133        }
         table.c   134        
         table.c   135        *AddAt = HashValue;    /* didn't find it in the chain */
         table.c   136        return NULL;
    000001E2 E000                   MOV         #0,R0
    000001E4 53F1                   MOV.L       @(4,R15),R3
    000001E6 23B2                   MOV.L       R11,@R3
         table.c   137    }
    000001E8              L602:                             
    000001E8 7F08                   ADD         #8,R15
    000001EA 4F26                   LDS.L       @R15+,PR
    000001EC 6AF6                   MOV.L       @R15+,R10
    000001EE 6BF6                   MOV.L       @R15+,R11
    000001F0 6CF6                   MOV.L       @R15+,R12
    000001F2 6DF6                   MOV.L       @R15+,R13
    000001F4 000B                   RTS
    000001F6 6EF6                   MOV.L       @R15+,R14
         table.c   138    
         table.c   139    /* set an identifier and return the identifier. share if possible */
         table.c   140    char *TableSetIdentifier(struct Table *Tbl, const char *Ident, int IdentLen)
    000001F8              _TableSetIdentifier:             ; function: TableSetIdentifier
                                                           ; frame size=28
    000001F8 2FE6                   MOV.L       R14,@-R15
    000001FA 2FD6                   MOV.L       R13,@-R15
    000001FC 2FC6                   MOV.L       R12,@-R15
    000001FE 6D63                   MOV         R6,R13
    00000200 4F22                   STS.L       PR,@-R15
    00000202 6C43                   MOV         R4,R12
    00000204 7FF8                   ADD         #-8,R15
         table.c   141    {
         table.c   142        int AddAt;
         table.c   143        struct TableEntry *FoundEntry = TableSearchIdentifier(Tbl, Ident, IdentLen, &AddAt);
    00000206 67F3                   MOV         R15,R7
    00000208 1F51                   MOV.L       R5,@(4,R15)
    0000020A BFBC                   BSR         __$TableSearchIdentifier




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000020C 64C3                   MOV         R12,R4
    0000020E 6403                   MOV         R0,R4
         table.c   144        
         table.c   145        if (FoundEntry != NULL)
    00000210 2448                   TST         R4,R4
    00000212 8901                   BT          L603
         table.c   146            return &FoundEntry->p.Key[0];
    00000214 A022                   BRA         L613
    00000216 6043                   MOV         R4,R0
    00000218              L603:                             
         table.c   147        else
         table.c   148        {   /* add it to the table - we economise by not allocating the whole structure here */
         table.c   149            struct TableEntry *NewEntry = HeapAllocMem(sizeof(struct TableEntry) - sizeof(union TableEntryPayl
                         +oad) + IdentLen + 1);
    00000218 D221                   MOV.L       L614+38,R2 ; _HeapAllocMem
    0000021A 64D3                   MOV         R13,R4
    0000021C 420B                   JSR         @R2
    0000021E 740D                   ADD         #13,R4
    00000220 6E03                   MOV         R0,R14
         table.c   150            if (NewEntry == NULL)
    00000222 2EE8                   TST         R14,R14
    00000224 8B05                   BF          L606
         table.c   151                ProgramFail(NULL, "out of memory");
    00000226 D21F                   MOV.L       L614+42,R2 ; L565
    00000228 D31F                   MOV.L       L614+46,R3 ; _ProgramFail
    0000022A 2F26                   MOV.L       R2,@-R15
    0000022C 430B                   JSR         @R3
    0000022E E400                   MOV         #0,R4
    00000230 7F04                   ADD         #4,R15
    00000232              L606:                             
         table.c   152                
         table.c   153            strncpy((char *)&NewEntry->p.Key[0], (char *)Ident, IdentLen);
    00000232 66D3                   MOV         R13,R6
    00000234 55F1                   MOV.L       @(4,R15),R5
    00000236 64E3                   MOV         R14,R4
    00000238 D31C                   MOV.L       L614+50,R3 ; _strncpy
    0000023A 430B                   JSR         @R3
    0000023C 740C                   ADD         #12,R4
         table.c   154            NewEntry->p.Key[IdentLen] = '\0';
    0000023E 62E3                   MOV         R14,R2
    00000240 720C                   ADD         #12,R2
    00000242 3D2C                   ADD         R2,R13
    00000244 E300                   MOV         #0,R3
    00000246 2D30                   MOV.B       R3,@R13
         table.c   155            NewEntry->Next = Tbl->HashTable[AddAt];
    00000248 62F2                   MOV.L       @R15,R2
    0000024A 4208                   SHLL2       R2
    0000024C 50C1                   MOV.L       @(4,R12),R0
    0000024E 032E                   MOV.L       @(R0,R2),R3
    00000250 2E32                   MOV.L       R3,@R14
         table.c   156            Tbl->HashTable[AddAt] = NewEntry;
    00000252 62F2                   MOV.L       @R15,R2
    00000254 50C1                   MOV.L       @(4,R12),R0
    00000256 4208                   SHLL2       R2
    00000258 02E6                   MOV.L       R14,@(R0,R2)
         table.c   157            return &NewEntry->p.Key[0];
    0000025A 60E3                   MOV         R14,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000025C              L613:                             
    0000025C 700C                   ADD         #12,R0
         table.c   158        }
         table.c   159    }
    0000025E 7F08                   ADD         #8,R15
    00000260 4F26                   LDS.L       @R15+,PR
    00000262 6CF6                   MOV.L       @R15+,R12
    00000264 6DF6                   MOV.L       @R15+,R13
    00000266 000B                   RTS
    00000268 6EF6                   MOV.L       @R15+,R14
         table.c   160    
         table.c   161    /* register a string in the shared string store */
         table.c   162    char *TableStrRegister2(const char *Str, int Len)
    0000026A              _TableStrRegister2:              ; function: TableStrRegister2
                                                           ; frame size=8
    0000026A 7FF8                   ADD         #-8,R15
    0000026C 2F42                   MOV.L       R4,@R15
         table.c   163    {
         table.c   164        return TableSetIdentifier(&StringTable, Str, Len);
    0000026E 6653                   MOV         R5,R6
    00000270 1F51                   MOV.L       R5,@(4,R15)
    00000272 65F2                   MOV.L       @R15,R5
    00000274 D402                   MOV.L       L614+6,R4  ; _StringTable
    00000276 AFBF                   BRA         _TableSetIdentifier
    00000278 7F08                   ADD         #8,R15
    0000027A              L614:                             
    0000027A 0000                   .DATA.W     0
    0000027C <00000000>             .DATA.L     _StringHashTable
    00000280 <00000000>             .DATA.L     _StringTable
    00000284 <00000000>             .DATA.L     L496
    00000288 <00000000>             .DATA.L     _StrEmpty
    0000028C <00000000>             .DATA.L     _memset
    00000290 <00000000>             .DATA.L     __modlu
    00000294 <00000000>             .DATA.L     _VariableAlloc
    00000298 <00000000>             .DATA.L     _HeapFreeMem
    0000029C <00000000>             .DATA.L     _strncmp
    000002A0 <00000000>             .DATA.L     _HeapAllocMem
    000002A4 <00000000>             .DATA.L     L565
    000002A8 <00000000>             .DATA.L     _ProgramFail
    000002AC <00000000>             .DATA.L     _strncpy
         table.c   165    }
         table.c   166    
         table.c   167    char *TableStrRegister(const char *Str)
    000002B0              _TableStrRegister:               ; function: TableStrRegister
                                                           ; frame size=8
    000002B0 4F22                   STS.L       PR,@-R15
    000002B2 7FFC                   ADD         #-4,R15
         table.c   168    {
         table.c   169        return TableStrRegister2(Str, strlen((char *)Str));
    000002B4 D312                   MOV.L       L615+2,R3  ; _strlen
    000002B6 430B                   JSR         @R3
    000002B8 2F42                   MOV.L       R4,@R15
    000002BA 6503                   MOV         R0,R5
    000002BC 64F2                   MOV.L       @R15,R4
    000002BE 7F04                   ADD         #4,R15
    000002C0 AFD3                   BRA         _TableStrRegister2
    000002C2 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         table.c   170    }
         table.c   171    
         table.c   172    /* free all the strings */
         table.c   173    void TableStrFree()
    000002C4              _TableStrFree:                   ; function: TableStrFree
                                                           ; frame size=20
    000002C4 2FE6                   MOV.L       R14,@-R15
    000002C6 2FD6                   MOV.L       R13,@-R15
    000002C8 2FC6                   MOV.L       R12,@-R15
    000002CA 2FB6                   MOV.L       R11,@-R15
    000002CC 4F22                   STS.L       PR,@-R15
         table.c   174    {
         table.c   175        struct TableEntry *Entry;
         table.c   176        struct TableEntry *NextEntry;
         table.c   177        int Count;
         table.c   178        
         table.c   179        for (Count = 0; Count < StringTable.Size; Count++)
    000002CE DB0D                   MOV.L       L615+6,R11 ; _HeapFreeMem
    000002D0 DC0D                   MOV.L       L615+10,R12; _StringTable
    000002D2 A00B                   BRA         L609
    000002D4 EE00                   MOV         #0,R14
    000002D6              L610:                             
         table.c   180        {
         table.c   181            for (Entry = StringTable.HashTable[Count]; Entry != NULL; Entry = NextEntry)
    000002D6 64E3                   MOV         R14,R4
    000002D8 50C1                   MOV.L       @(4,R12),R0
    000002DA 4408                   SHLL2       R4
    000002DC A003                   BRA         L611
    000002DE 044E                   MOV.L       @(R0,R4),R4
    000002E0              L612:                             
         table.c   182            {
         table.c   183                NextEntry = Entry->Next;
         table.c   184                HeapFreeMem(Entry);
    000002E0 4B0B                   JSR         @R11
    000002E2 6D42                   MOV.L       @R4,R13
    000002E4 64D3                   MOV         R13,R4
    000002E6              L611:                             
    000002E6 2448                   TST         R4,R4
    000002E8 8BFA                   BF          L612
    000002EA 7E01                   ADD         #1,R14
    000002EC              L609:                             
    000002EC 63C1                   MOV.W       @R12,R3
    000002EE 3E33                   CMP/GE      R3,R14
    000002F0 8BF1                   BF          L610
         table.c   185            }
         table.c   186        }
         table.c   187    }
    000002F2 4F26                   LDS.L       @R15+,PR
    000002F4 6BF6                   MOV.L       @R15+,R11
    000002F6 6CF6                   MOV.L       @R15+,R12
    000002F8 6DF6                   MOV.L       @R15+,R13
    000002FA 000B                   RTS
    000002FC 6EF6                   MOV.L       @R15+,R14
    000002FE              L615:                             
    000002FE 0000                   .DATA.W     0
    00000300 <00000000>             .DATA.L     _strlen
    00000304 <00000000>             .DATA.L     _HeapFreeMem




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000308 <00000000>             .DATA.L     _StringTable
D   00000000              _StrEmpty:                       ; static: StrEmpty
    00000000 00000000               .DATA.L     H'00000000
C   00000000              L496:
    00000000 00                     .DATA.B     H'00
    00000001 00000001               .RES.B      1
    00000002 00000002               .RES.W      1
    00000004              L565:
    00000004 6F7574206F             .SDATA      "out of memory"
             66206D656D   
             6F7279       
    00000011 00                     .DATA.B     H'00
B   00000000              _StringTable:                    ; static: StringTable
    00000000 00000008               .RES.L      2
    00000008              _StringHashTable:                ; static: StringHashTable
    00000008 00000184               .RES.L      97













































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-May-2013 20:25:24  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      187



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000030C Byte(s)
CONSTANT SECTION (C):                               00000012 Byte(s)
DATA     SECTION (D):                               00000004 Byte(s)
BSS      SECTION (B):                               0000018C Byte(s)

 TOTAL PROGRAM SIZE: 000004AE Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            9
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          12
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            52






























*** COMMAND PARAMETER ***


  -subcommand=C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\hmk346.tmp 

